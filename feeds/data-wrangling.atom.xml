<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog - Data Wrangling</title><link href="/" rel="alternate"></link><link href="/feeds/data-wrangling.atom.xml" rel="self"></link><id>/</id><updated>2016-05-04T00:00:00+00:00</updated><entry><title>Data Wrangling with MongoDB – OpenStreetMap Data Case Study</title><link href="/data-wrangling-with-mongodb-openstreetmap-data-case-study.html" rel="alternate"></link><published>2016-05-04T00:00:00+00:00</published><updated>2016-05-04T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-05-04:/data-wrangling-with-mongodb-openstreetmap-data-case-study.html</id><summary type="html">&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Map Area: &lt;a href="https://mapzen.com/data/metro-extracts/"&gt;Waterloo, Ontario, Canada&lt;/a&gt;&lt;br&gt;
Problems Encountered in the Map:&lt;br&gt;
After initially downloading the Waterloo area and running it against the script below, I noticed the following problems with the data:&lt;br&gt;
•   Inconsistent methods of describing street direction (e.g. “N” or “North”)&lt;br&gt;
•   Inconsistent street types (e.g. St. instead …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Map Area: &lt;a href="https://mapzen.com/data/metro-extracts/"&gt;Waterloo, Ontario, Canada&lt;/a&gt;&lt;br&gt;
Problems Encountered in the Map:&lt;br&gt;
After initially downloading the Waterloo area and running it against the script below, I noticed the following problems with the data:&lt;br&gt;
•   Inconsistent methods of describing street direction (e.g. “N” or “North”)&lt;br&gt;
•   Inconsistent street types (e.g. St. instead of Street, Dr instead of Drive)&lt;br&gt;
•   Incorrect street types (e.g. AVenue instead of Avenue, Cresent instead of Crescent)&lt;br&gt;
•   Inconsistent method of displaying the Postal Code (XXXXXX instead of XXX XXX)&lt;br&gt;
•   Inconsistent Methods of Describing Street Direction&lt;br&gt;
Some of the street names end with a direction (North, East, South, West). Some of these directions however are entered in as abbreviations (N, E, S, W) as opposed to the full words. In order to keep the direction method consistent, the abbreviation was replaced with the full word.
&lt;em&gt;Inconsistent Street Types&lt;/em&gt;&lt;br&gt;
Some of the street types were abbreviated as St. or Dr instead of Street or Drive, respectively. In order to ensure consistency, all the abbreviations were converted to full street types.&lt;br&gt;
&lt;em&gt;Incorrect Street Types&lt;/em&gt;&lt;br&gt;
Some of the street types were spelt incorrectly such as AVenue and Cresent instead of Avenue and Crescent, respectively. These incorrect words were detected and replaced with the correct spelling.  &lt;/p&gt;
&lt;p&gt;Inconsistent Method if Displaying Postal Code&lt;br&gt;
In Canada, postal codes are 6 characters long with alternating letters and numbers, with an optional space between the first and last 3 characters (i.e. LNL NLN where L = Letter and N = Number). Some of the postal codes in the dataset have a space between the first and last 3 characters and some do not (e.g. N2K4N2 or N2K 4N2). &lt;/p&gt;
&lt;h3&gt;Data Overview&lt;/h3&gt;
&lt;p&gt;Below are some of the basic statistics about the dataset, including the MongoDB queries used to produce the statistics.  &lt;/p&gt;
&lt;h5&gt;File Size&lt;/h5&gt;
&lt;p&gt;waterloo-region_canada.osm – 155MB&lt;br&gt;
waterloo-region_canada.json – 211MB  &lt;/p&gt;
&lt;h5&gt;Number of Documents&lt;/h5&gt;
&lt;p&gt;db.waterloo.find().count()&lt;br&gt;
→ 763051&lt;/p&gt;
&lt;h5&gt;Number of Nodes&lt;/h5&gt;
&lt;p&gt;db.waterloo.find({"type" : "node"}).count()&lt;br&gt;
→ 670362&lt;/p&gt;
&lt;h5&gt;Number of Ways&lt;/h5&gt;
&lt;p&gt;db.waterloo.find({"type" : "way"}).count()&lt;br&gt;
→ 92689&lt;/p&gt;
&lt;h5&gt;Number of Unique Users&lt;/h5&gt;
&lt;p&gt;db.waterloo.aggregate([{ "$group": { "_id": "$created.user"}},
    {"$group": {"_id": 1, "count": { "$sum": 1}}}])&lt;br&gt;
→ 503&lt;/p&gt;
&lt;p&gt;As can be seen, some of the city names are duplicated with different names, such as Waterloo and City of Waterloo. One way to fix this issue would be to either include the type of city (e.g. City of, Township, etc.) for all cities or not include it for any of the cities. The issue with this approach is that the title is part of the official name for some of the cities and not for others, so it would inappropriate to force the names to be consistent in this case. The benefit of sticking to one method is that there will not be any duplicates, but forcing consistency may result in erroneous city names. &lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Although some of the inconsistent and incorrect data were fixed, there still remain some inconsistencies and errors. The street directions and types were mostly corrected for whereas the postal codes and city names remain inconsistent. Altering the postal codes to be more consistent is fairly straightforward whereas correcting the city names would pose a challenge.&lt;/p&gt;
&lt;p&gt;The script below wrangles the data and transforms the OpenStreetMap data into dictionaries that look like this:&lt;br&gt;
{
"id": "2406124091",
"type: "node",
"visible":"true",
"created": {
          "version":"2",
          "changeset":"17206049",
          "timestamp":"2013-08-03T16:43:42Z",
          "user":"linuxUser16",
          "uid":"1219059"
        },
"pos": [41.9757030, -87.6921867],
"address": {
          "housenumber": "5157",
          "postcode": "60625",
          "street": "North Lincoln Ave"
        },
"amenity": "restaurant",
"cuisine": "mexican",
"name": "La Cabana De Don Luis",
"phone": "1 (773)-271-5176"
}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only 2 types of top level tags are procssed: "node" and "way"&lt;/li&gt;
&lt;li&gt;All attributes of "node" and "way" are turned into regular key/value pairs, except:&lt;ul&gt;
&lt;li&gt;attributes in the CREATED array should be added under a key "created"&lt;/li&gt;
&lt;li&gt;attributes for latitude and longitude should be added to a "pos" array,
  for use in geospacial indexing. The values inside "pos" array are floats
  and not strings. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if the second level tag "k" value contains problematic characters, it is ignored&lt;/li&gt;
&lt;li&gt;if the second level tag "k" value starts with "addr:", it is added to a dictionary "address"&lt;/li&gt;
&lt;li&gt;if the second level tag "k" value does not start with "addr:", but contains ":", it is processed
  as a regular tag&lt;/li&gt;
&lt;li&gt;if there is a second ":" that separates the type/direction of a street,
  the tag is ignored  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Import libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xml.etree.cElementTree&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ET&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^([a-z]|_)*$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lower_colon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^([a-z]|_)*:([a-z]|_)*$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;problemchars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;[=\+/&amp;amp;&amp;lt;&amp;gt;;&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;\?%#$@\,\. \t\r\n]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;street_type_re&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\b\S+\.?$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IGNORECASE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;CREATED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;changeset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# List of expected street types&lt;/span&gt;
&lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Street&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Avenue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Boulevard&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Drive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Place&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Square&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lane&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Road&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="s2"&gt;&amp;quot;Trail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Parkway&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Commons&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;116&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;124&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;14&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;154&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;18&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;21&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;22&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;24&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;34&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;45&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;51&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;97&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Baseline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Boardwalk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Close&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cove&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Crescent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Crestway&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Cross&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;Crossing&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;East&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;West&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;South&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;North&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Estates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Gardens&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Gate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Grove&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Heights&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Highway&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;Hill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hollow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Walk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Way&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Map of incorrect to correct street types&lt;/span&gt;
&lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;St&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Street&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;St.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Street&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Ave&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Avenue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Rd.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Road&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Rd&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Road&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;AVenue&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Avenue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Cresent&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Crescent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Dr&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Drive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Dr.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Drive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;N&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;North&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;E&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;East&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;S&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;South&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;W&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;West&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;road&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Road&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;canadatrust.com&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;45th&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;45&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Function to update the street types based on the mapping as defined above&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;street_type_re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;

&lt;span class="c1"&gt;# Function to update the problematic nodes&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;addr:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;address&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;addr:street&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;update_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;addr:postcode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^[A-Z]\d[A-Z] \d[A-Z]\d$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;


&lt;span class="c1"&gt;# Function to convert XML input to JSON output&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shape_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;node&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;way&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lat&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lon&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])]&lt;/span&gt;
            &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;CREATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;k&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;problemchars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ref&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;node_refs&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;node_refs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
                    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;node_refs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Function that wrangles the data&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;file_out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{0}.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterparse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_in&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shape_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;process_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;waterloo-region_canada.osm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{&amp;#39;created&amp;#39;: {&amp;#39;changeset&amp;#39;: &amp;#39;38463820&amp;#39;,
             &amp;#39;timestamp&amp;#39;: &amp;#39;2016-04-11T01:35:40Z&amp;#39;,
             &amp;#39;uid&amp;#39;: &amp;#39;951370&amp;#39;,
             &amp;#39;user&amp;#39;: &amp;#39;fbax&amp;#39;,
             &amp;#39;version&amp;#39;: &amp;#39;1&amp;#39;},
 &amp;#39;id&amp;#39;: &amp;#39;409382133&amp;#39;,
 &amp;#39;node_refs&amp;#39;: [&amp;#39;4113058876&amp;#39;, &amp;#39;4113058877&amp;#39;, &amp;#39;4113058878&amp;#39;],
 &amp;#39;type&amp;#39;: &amp;#39;way&amp;#39;}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This script queries the database&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Import libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pymongo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MongoClient&lt;/span&gt;

&lt;span class="c1"&gt;# Initialize MongoDB client&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mongodb://localhost:27017&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;

&lt;span class="c1"&gt;# Print Postal Codes ordered by descending count&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waterloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aggregate&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$match&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;address.postcode&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$exists&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$group&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$address.postcode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;count&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$sum&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$sort&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;count&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}}])&lt;/span&gt;

&lt;span class="c1"&gt;# Print postal codes with count&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Postal Codes with count:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Number of documents&lt;/span&gt;
&lt;span class="n"&gt;documents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waterloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of documents:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Number of nodes&lt;/span&gt;
&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waterloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of nodes:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Number of ways&lt;/span&gt;
&lt;span class="n"&gt;ways&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waterloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;way&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of ways:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ways&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Number of unique users&lt;/span&gt;
&lt;span class="n"&gt;unique_users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waterloo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aggregate&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$group&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$created.user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$group&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$sum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}}}])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of unique users:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;unique_users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Postal Codes with count:
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4L7&amp;#39;, &amp;#39;count&amp;#39;: 105}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4N3&amp;#39;, &amp;#39;count&amp;#39;: 99}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4N2&amp;#39;, &amp;#39;count&amp;#39;: 75}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1A4&amp;#39;, &amp;#39;count&amp;#39;: 63}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3V1&amp;#39;, &amp;#39;count&amp;#39;: 57}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4C9&amp;#39;, &amp;#39;count&amp;#39;: 45}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 0A6&amp;#39;, &amp;#39;count&amp;#39;: 42}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1K7&amp;#39;, &amp;#39;count&amp;#39;: 39}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 0A3&amp;#39;, &amp;#39;count&amp;#39;: 36}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 4R8&amp;#39;, &amp;#39;count&amp;#39;: 34}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4M3&amp;#39;, &amp;#39;count&amp;#39;: 33}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1G9&amp;#39;, &amp;#39;count&amp;#39;: 30}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1C2&amp;#39;, &amp;#39;count&amp;#39;: 27}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1G8&amp;#39;, &amp;#39;count&amp;#39;: 27}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 4Z7&amp;#39;, &amp;#39;count&amp;#39;: 24}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 0B1&amp;#39;, &amp;#39;count&amp;#39;: 24}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 2Z7&amp;#39;, &amp;#39;count&amp;#39;: 24}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1C1&amp;#39;, &amp;#39;count&amp;#39;: 24}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4N6&amp;#39;, &amp;#39;count&amp;#39;: 21}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 4G3&amp;#39;, &amp;#39;count&amp;#39;: 21}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 0A2&amp;#39;, &amp;#39;count&amp;#39;: 21}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1H7&amp;#39;, &amp;#39;count&amp;#39;: 18}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E0A3&amp;#39;, &amp;#39;count&amp;#39;: 18}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3H2&amp;#39;, &amp;#39;count&amp;#39;: 18}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H4R8&amp;#39;, &amp;#39;count&amp;#39;: 17}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4L9&amp;#39;, &amp;#39;count&amp;#39;: 15}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 4G1&amp;#39;, &amp;#39;count&amp;#39;: 15}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 2W7&amp;#39;, &amp;#39;count&amp;#39;: 15}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 4G2&amp;#39;, &amp;#39;count&amp;#39;: 15}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5Z4&amp;#39;, &amp;#39;count&amp;#39;: 14}
{&amp;#39;_id&amp;#39;: &amp;#39;N1S 1V6&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3N1&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5S7&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 3P8&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3H3&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 1B0&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2R 0A4&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 1N0&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N3C 1B7&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1G6&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1H9&amp;#39;, &amp;#39;count&amp;#39;: 12}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1A2&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2P 2E7&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 2R0&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3V3&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3V5&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1A3&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3H1&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3H6&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1H6&amp;#39;, &amp;#39;count&amp;#39;: 9}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3G5&amp;#39;, &amp;#39;count&amp;#39;: 8}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L5Z4&amp;#39;, &amp;#39;count&amp;#39;: 7}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 1K3&amp;#39;, &amp;#39;count&amp;#39;: 7}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1A5&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1E9&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 1W9&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3G4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 7H2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 5C6&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 2X2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3G1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 4X6&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3J3&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1R1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 8P1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 1A1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 2Y5&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1T 1K7&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3V4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 1E0&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3E9&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 0C5&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6R5&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2R0A4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3Z3&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 1J9&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1H2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2G9&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1E7&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1X4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 1B6&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 4Z2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 2E1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 1S0&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4Z1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1K1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 0A6&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6C2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3L2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2A 0E4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1M 3G4&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 1X1&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3V3&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1P2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1B7&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N1E 5R3&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 2Y2&amp;#39;, &amp;#39;count&amp;#39;: 6}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1H3&amp;#39;, &amp;#39;count&amp;#39;: 5}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3H8&amp;#39;, &amp;#39;count&amp;#39;: 5}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3H4&amp;#39;, &amp;#39;count&amp;#39;: 4}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 1K0&amp;#39;, &amp;#39;count&amp;#39;: 4}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 6J2&amp;#39;, &amp;#39;count&amp;#39;: 4}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6A1&amp;#39;, &amp;#39;count&amp;#39;: 4}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3W1&amp;#39;, &amp;#39;count&amp;#39;: 4}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4G3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 4C6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1K 1S5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4S2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 0C1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 1G9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2A 4H4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1E 5H5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 5H7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 0A8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 0A7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 0A2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 6J4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3S2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1P8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 2H1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 3W7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3L1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 4V2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 7W6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5W6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 3J2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3Z4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6G6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1E 2Y9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 3Z6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 4Z2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6P5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 2J8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2Z6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3Y8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5Z3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3V7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1C3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 1C8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4W2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 1V8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 2X6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6R2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3E6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3E7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4N4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1W4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1W3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1W2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 2V3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1E 7C4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3B 2N0&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 3M4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1T6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 3M6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 2C6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 0J3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 2A8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 1Z4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 2Z4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 5A3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4M4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 5S2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 2Z6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3E8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3L3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5G7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 4S7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 1A3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3X3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1W5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1T 1Z9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 5L4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 2A9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 1P7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3B 2Y9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3B9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 3C9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 8L4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1P 1C7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2Y2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 3J5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 7R4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 0A9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 5N9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1W7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 1A1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1T 1C0&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B 2M0&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 2G8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2R 0A3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 2T3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2N 1C1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1E3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 3G5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 4A2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 1X3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 6J8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1E3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 1R9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1S 2H4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1T 2K8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 2N6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1T6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3T7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2X4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1X1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6J3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1K 1X3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 2G4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2N8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4W3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 7Y5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 5G6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1S 1P3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 8R3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 2M6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1R3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 4V2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 4J4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 5J9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5G4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3C5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2B 1E8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 6R4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 1Y4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 2R6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 4Z8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 4X7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 2J3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 3H3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 1B4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1V4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 1C5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3C2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 1X8&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 3X7&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 0Z6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2A 2Y2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2V 1C2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 0C6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2Y9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3W1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 3P4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1R1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 2M6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 0B3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2P 2G2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 4K6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1L 1G1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 4W1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1H6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3A 1J3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5E2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3A4&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3W3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1V5&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3V1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 3T6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1T2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 2W1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1E 7H1&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6E3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 3Y9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 1N9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 2J2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1H2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2T 3A3&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H 3T9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 3W6&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 3A2&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2X0&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1R9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 4W9&amp;#39;, &amp;#39;count&amp;#39;: 3}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H 0A8&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 1H1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6B5&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2A 3G6&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5P6&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1M8&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 2N9&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;n2j 2h4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1V6&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1X5&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 4M3&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5J4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R 3B2&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5V4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2V9&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1A7&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2k  3T&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 3C5&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2W9&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C1K3&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N1S 1H3&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K  3v&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1H1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N1H6J2&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3W4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 5Z7&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1B7&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H 6R2&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N0B1K0&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J 2X7&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2R 1S1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M3W1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 3N1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3H5&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E 4H9&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C 1A4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L6A1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L 6C1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M 3R3&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G 0A9&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G 1A1&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J3H4&amp;#39;, &amp;#39;count&amp;#39;: 2}
{&amp;#39;_id&amp;#39;: &amp;#39;N3H0A8&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L1H1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2E4H9&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L6B5&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2A3G6&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M3R3&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L5P6&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1H3&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M3H5&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N1S1H3&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2R1S1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J3H8&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L5V4&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2k 3T6&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2H6R2&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1X5&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1A7&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G3N1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2M3W4&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C2N9&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L5Z7&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L4M3&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1A1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J2W9&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L5J4&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L3G5&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G3C5&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1M8&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N1R3B2&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2K 3v3&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2L6C1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1V6&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2C1A4&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1H1&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2G1B7&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N1G0A9&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J2X7&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;n2j2h4&amp;#39;, &amp;#39;count&amp;#39;: 1}
{&amp;#39;_id&amp;#39;: &amp;#39;N2J2V9&amp;#39;, &amp;#39;count&amp;#39;: 1}
Number of documents:
2289153
Number of nodes:
2011086
Number of ways:
278067
Number of unique users:
{&amp;#39;_id&amp;#39;: 1, &amp;#39;count&amp;#39;: 503}
&lt;/pre&gt;&lt;/div&gt;</content></entry></feed>